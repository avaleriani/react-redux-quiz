{"version":3,"sources":["components/Question/styles.module.css","pages/GameContainer/styles.module.css","components/Header/styles.module.css","Utils/utils.js","redux/reducers/rootReducer.js","redux/reducers/questionReducer.js","redux/types.js","redux/reducers/gameReducer.js","components/Header/Header.js","components/Welcome/Welcome.js","components/Question/Question.js","components/LostGame/LostGame.js","redux/actions/questionAction.js","components/WinGame/WinGame.js","pages/GameContainer/GameContainer.js","redux/actions/gameAction.js","components/App/App.js","redux/store.js","serviceWorker.js","index.js"],"names":["module","exports","question","question-category","question-text","game-container","game-screen","header","calculateScore","base","Math","pow","combineReducers","askedQuestions","state","arguments","length","undefined","action","type","concat","Object","toConsumableArray","questionId","questionLoading","isLoading","questionError","hasErrored","highestScore","console","log","score","currentScore","step","roundPoints","Header","props","react_default","a","createElement","className","styles","timeLeft","Welcome","onClick","startGame","Question","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","answer","isWrong","onTextUpdate","bind","assertThisInitialized","handleSubmit","evt","setState","target","value","preventDefault","correctAnswer","text","div","document","innerHTML","textContent","innerText","cleanHtmlText","isAnswerCorrect","onSubmit","toLowerCase","category","title","onChange","autoFocus","Component","LostGame","role","aria-label","restartGame","status","WinGame","GameContainer","isGameEnded","tick","startTimer","endGame","clearInterval","timer","setInterval","resetGame","prevState","_this2","fetchNextQuestion","fetchQuestion","process","components_Welcome_Welcome","components_WinGame_WinGame","components_Question_Question","components_Header_Header","renderScreen","components_LostGame_LostGame","connect","dispatch","url","currentStep","getState","fetch","then","response","ok","Error","statusText","json","questionArr","_getState","id","advanceStep","calculateRoundPoints","questionSuccess","catch","error","store","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","thunk","configureStore","App","es","pages_GameContainer_GameContainer","Boolean","location","hostname","match","ReactDOM","render","components_App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1f490fa9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"question\":\"styles_question__H8JpO\",\"question-category\":\"styles_question-category__ERckL\",\"question-text\":\"styles_question-text__YnnAp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"game-container\":\"styles_game-container__1gV1-\",\"game-screen\":\"styles_game-screen__dLCcX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__OoVxy\"};","/**\n * @type {string} text\n * @return {string}\n */\nexport const cleanHtmlText = (text) => {\n//disregard security concerns, let's assume the api is safe.\n  const div = document.createElement(\"div\");\n  div.innerHTML = text;\n  return div.textContent || div.innerText || \"\";\n};\n\n/**\n * @type {number} base\n * @return {number}\n */\nexport const calculateScore = (base) => (\n  Math.pow(2, base)\n);","import { combineReducers } from 'redux';\nimport { questionError, questionSuccess, questionLoading, alreadyAskedQuestions } from './questionReducer';\nimport { advanceStep, calculateCurrentScore, updateHighestScore, calculateRoundPoints } from \"./gameReducer\";\n\nexport default combineReducers({\n  askedQuestions: alreadyAskedQuestions,\n  question: questionSuccess,\n  questionLoading,\n  questionError,\n  highestScore: updateHighestScore,\n  currentScore: calculateCurrentScore,\n  roundPoints: calculateRoundPoints,\n  step: advanceStep\n});","import {\n  FETCH_QUESTION_ERROR,\n  FETCH_QUESTION_LOADING,\n  FETCH_QUESTION_SUCCESS,\n  SAVE_ALREADY_ASKED_QUESTIONS\n} from \"../types\";\n\nexport const questionError = (state = false, action) => {\n  switch(action.type) {\n    case FETCH_QUESTION_ERROR:\n      return action.hasErrored;\n    default:\n      return state;\n  }\n};\n\nexport const questionLoading = (state = false, action) => {\n  switch(action.type) {\n    case FETCH_QUESTION_LOADING:\n      return action.isLoading;\n    default:\n      return state;\n  }\n};\n\nexport const questionSuccess = (state = null, action) => {\n  switch(action.type) {\n    case FETCH_QUESTION_SUCCESS:\n      return action.question;\n    default:\n      return state;\n  }\n};\n\nexport const alreadyAskedQuestions = (state = [], action) => {\n  switch(action.type) {\n    case SAVE_ALREADY_ASKED_QUESTIONS:\n      return [...state, action.questionId];\n    default:\n      return state;\n  }\n};","export const FETCH_QUESTION_ERROR = 'FETCH_QUESTION_ERROR';\nexport const FETCH_QUESTION_SUCCESS = 'FETCH_QUESTION_SUCCESS';\nexport const FETCH_QUESTION_LOADING = 'FETCH_QUESTION_LOADING';\nexport const SAVE_ALREADY_ASKED_QUESTIONS = 'SAVE_ALREADY_ASKED_QUESTIONS';\n\nexport const ADVANCE_STEP = 'ADVANCE_STEP';\nexport const RESET_STEP = 'RESET_STEP';\nexport const RESET_CURRENT_SCORE = 'RESET_CURRENT_SCORE';\nexport const RESET_ROUND_POINTS = 'RESET_ROUND_POINTS';\n\nexport const CALCULATE_CURRENT_SCORE = 'CALCULATE_CURRENT_SCORE';\nexport const CALCULATE_ROUND_POINTS = 'CALCULATE_ROUND_POINTS';\nexport const UPDATE_HIGHEST_SCORE = 'UPDATE_HIGHEST_SCORE';\n\n\n\n","import {\n  ADVANCE_STEP, UPDATE_HIGHEST_SCORE,\n  CALCULATE_CURRENT_SCORE, CALCULATE_ROUND_POINTS,\n  RESET_CURRENT_SCORE, RESET_ROUND_POINTS, RESET_STEP\n} from \"../types\";\nimport { calculateScore } from \"../../Utils/utils\";\n\nexport const advanceStep = (state = 0, action) => {\n  switch(action.type) {\n    case ADVANCE_STEP:\n      return state + 1;\n    case RESET_STEP:\n      return 0;\n    default:\n      return state;\n  }\n};\n\nexport const calculateCurrentScore = (state = 0, action) => {\n  switch(action.type) {\n    case CALCULATE_CURRENT_SCORE:\n      return action.step > 0 ? state + calculateScore(action.step - 1) : 0;\n    case RESET_CURRENT_SCORE:\n      return 0;\n    default:\n      return state;\n  }\n};\n\nexport const calculateRoundPoints = (state = 0, action) => {\n  switch(action.type) {\n    case CALCULATE_ROUND_POINTS:\n      return calculateScore(action.step);\n    case RESET_ROUND_POINTS:\n      return 0;\n    default:\n      return state;\n  }\n};\n\nexport const updateHighestScore = (state = 0, action) => {\n  switch(action.type) {\n    case UPDATE_HIGHEST_SCORE:\n      console.log(action)\n      return action.score;\n    default:\n      return state;\n  }\n};","import React from \"react\";\nimport styles from \"./styles.module.css\";\n\n/**\n * @param {{ roundPoints: number, timeLeft: number, currentScore: number, highestScore: number}} props\n * @return HTMLElement\n */\nconst Header = (props) => (\n  <div className={styles['header']}>\n    <div>\n      <span>Time left: </span>\n      <span>{props.timeLeft}</span>\n    </div>\n    <div>\n      <span>Current score: </span>\n      <span>{props.currentScore}</span>\n    </div>\n    <div>\n      <span>Highest score:</span>\n      <span>{props.highestScore}</span>\n    </div>\n    <div>\n      <span>Round points:</span>\n      <span>{props.roundPoints}</span>\n    </div>\n  </div>\n);\n\nexport default Header;\n\n","import React from \"react\";\nimport styles from \"./styles.module.css\";\n\n/**\n * @param {{startGame: function}} props\n * @return HTMLElement\n */\nconst Welcome = (props) => (\n  <div>\n    Start quiz\n    <button onClick={props.startGame}>Start</button>\n  </div>\n);\n\nexport default Welcome;","import React, { Component } from \"react\";\nimport styles from \"./styles.module.css\";\nimport { cleanHtmlText } from \"../../Utils/utils\";\n\n/**\n * @param {{ question: Object, onSubmit: function}} props\n * @return HTMLElement\n */\nclass Question extends Component {\n  constructor() {\n    super();\n    this.state = {\n      answer: '',\n      isWrong: false\n    };\n\n    this.onTextUpdate = this.onTextUpdate.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  onTextUpdate(evt) {\n    this.setState({\n      answer: evt.target.value\n    });\n  }\n\n  handleSubmit(evt) {\n    evt.preventDefault();\n    //Sometimes the answer come wrapped in HTML.\n    const correctAnswer = cleanHtmlText(this.props.question.answer);\n    if (this.isAnswerCorrect(correctAnswer, this.state.answer)) {\n      this.setState({\n        isWrong: false\n      });\n      this.props.onSubmit(this.props.question.answer, this.state.answer)\n    } else {\n      this.setState({\n        isWrong: true\n      });\n    }\n  };\n\n  /**\n   * @type {string} correctAnswer\n   * @type {string} answer\n   * @return HTMLElement\n   */\n  isAnswerCorrect(correctAnswer, answer) {\n    return correctAnswer.toLowerCase() === answer.toLowerCase();\n  }\n\n  render() {\n    return this.props.question ? (\n      <form onSubmit={this.handleSubmit}>\n        <div className={styles['question']}>\n          <label>QUESTION</label>\n          <div className={styles['question-category']}>\n            {this.props.question ? this.props.question.category.title : ''}\n          </div>\n          <div className={styles['question-text']}>\n            {this.props.question.question}\n          </div>\n        </div>\n        <div className={styles['answer']}>\n          <input type=\"text\" onChange={this.onTextUpdate} autoFocus/>\n        </div>\n        <input type=\"submit\" value=\"Submit\"/>\n        {this.state.isWrong ? <div className={styles['is-wrong']}>Wrong answer</div> : null}\n      </form>\n    ) : null;\n  }\n}\n\nexport default Question;","import React from \"react\";\nimport styles from \"./styles.module.css\";\n\n/**\n * @param {{restartGame: function}} props\n * @return HTMLElement\n */\nconst LostGame = (props) => (\n  <div>\n    <span role=\"img\" aria-label=\"party-emoji\">🐐</span>\n    You lost\n    <span role=\"img\" aria-label=\"party-emoji\">🐐</span>\n    <button onClick={props.restartGame}>Restart</button>\n  </div>\n);\n\nexport default LostGame;","import {\n  FETCH_QUESTION_ERROR,\n  FETCH_QUESTION_LOADING,\n  FETCH_QUESTION_SUCCESS,\n  SAVE_ALREADY_ASKED_QUESTIONS\n} from \"../types\";\nimport { calculateCurrentScore, advanceStep, calculateRoundPoints, updateHighestScore } from \"./gameAction\";\n\nexport const questionError = (status) => ({ type: FETCH_QUESTION_ERROR, hasErrored: status });\nexport const questionLoading = (status) => ({ type: FETCH_QUESTION_LOADING, isLoading: status });\nexport const questionSuccess = (question) => ({ type: FETCH_QUESTION_SUCCESS, question });\nexport const alreadyAskedQuestions = (questionId) => ({ type: SAVE_ALREADY_ASKED_QUESTIONS, questionId });\n\n/**\n * @type {function} fetchQuestion\n */\nexport const fetchQuestion = (url, currentStep) => {\n  return (dispatch, getState) => {\n    dispatch(questionLoading(true));\n    fetch(url)\n      .then((response) => {\n        if (!response.ok) {\n          throw Error(response.statusText);\n        }\n        dispatch(questionLoading(false));\n        return response;\n      })\n      .then((response) => response.json())\n      .then((questionArr) => {\n        const { askedQuestions, highestScore, currentScore, roundPoints } = getState();\n        const question = questionArr[0];\n\n        //Validate if the current id was already asked\n        if (askedQuestions[question.id]) {\n          fetchQuestion(url, currentStep);\n        } else {\n          if (currentScore >= highestScore) {\n            dispatch(updateHighestScore(currentScore + roundPoints));\n          }\n          dispatch(alreadyAskedQuestions(question.id));\n          dispatch(advanceStep(currentStep));\n          dispatch(calculateCurrentScore(currentStep));\n          dispatch(calculateRoundPoints(currentStep));\n          dispatch(questionSuccess(question));\n        }\n      })\n      .catch((error) => {\n        dispatch(questionError(true));\n        console.error(error);\n      });\n  };\n};","import React from \"react\";\nimport styles from \"./styles.module.css\";\n\n/**\n * @param {{restartGame: function}} props\n * @return HTMLElement\n */\nconst WinGame = (props) => (\n  <div>\n    <span role=\"img\" aria-label=\"party-emoji\">🎉🎉  🏆  🎉🎉</span>\n    Congratulations, you Win!\n    <span role=\"img\" aria-label=\"party-emoji\">🎉🎉  🏆  🎉🎉</span>\n    <button onClick={props.restartGame}>Play again</button>\n  </div>\n);\n\nexport default WinGame;","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Header from '../../components/Header/Header';\nimport Welcome from \"../../components/Welcome/Welcome\";\nimport Question from \"../../components/Question/Question\";\nimport LostGame from \"../../components/LostGame/LostGame\";\nimport { fetchQuestion } from \"../../redux/actions/questionAction\";\nimport styles from \"./styles.module.css\";\nimport WinGame from \"../../components/WinGame/WinGame\";\nimport { resetGame } from \"../../redux/actions/gameAction\";\n\n/**\n * @type {{ timer: number, step: number, onSubmit: function}} props\n * @return HTMLElement\n */\nclass GameContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timeLeft: 30,\n      isGameEnded: false\n    };\n\n    this.tick = this.tick.bind(this);\n    this.startTimer = this.startTimer.bind(this);\n    this.endGame = this.endGame.bind(this);\n    this.restartGame = this.restartGame.bind(this);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  startTimer() {\n    clearInterval(this.timer);\n    this.setState({ timeLeft: 30, isGameEnded: false });\n    this.timer = setInterval(this.tick, 1000);\n  }\n\n  endGame() {\n    clearInterval(this.timer);\n    this.setState({\n      timeLeft: 30,\n      isGameEnded: true\n    });\n  }\n\n  restartGame() {\n    clearInterval(this.timer);\n    this.props.resetGame();\n    this.setState({\n      timeLeft: 30,\n      isGameEnded: false\n    });\n  }\n\n  tick() {\n    if (this.state.timeLeft > 0 && !this.props.hasErrored) {\n      this.setState(prevState => ({\n        timeLeft: prevState.timeLeft - 1\n      }));\n    } else if (this.props.hasErrored) {\n      clearInterval(this.timer);\n    } else {\n      this.endGame();\n    }\n  }\n\n  renderScreen(props) {\n    const fetchNextQuestion = () => {\n      props.fetchQuestion(`${process.env.REACT_APP_API_URL}api/random`, props.step);\n      this.startTimer();\n    };\n\n    switch(props.step) {\n      case 0:\n        return <Welcome startGame={fetchNextQuestion}/>;\n      case process.env.REACT_APP_AMOUNT_OF_LEVELS + 1:\n        clearInterval(this.timer);\n        return <WinGame restartGame={this.restartGame}/>;\n      default:\n        return <Question question={props.question} onSubmit={fetchNextQuestion}/>;\n    }\n  }\n\n  render() {\n    return (\n      <div className={styles['game-container']}>\n        <Header timeLeft={this.state.timeLeft} currentScore={this.props.currentScore}\n                highestScore={this.props.highestScore} roundPoints={this.props.roundPoints}/>\n        <div className={styles['game-screen']}>\n          {this.props.hasErrored ? <div>ERROR</div> : null}\n          {this.props.isLoading ? <div>LOADING</div> : null}\n          {!this.props.hasErrored && !this.props.isLoading && !this.state.isGameEnded ? this.renderScreen(this.props) : null}\n          {this.state.isGameEnded ? <LostGame restartGame={this.restartGame}/> : null}\n        </div>\n        <button onClick={this.restartGame}>Reset Game</button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    question: state.question,\n    hasErrored: state.questionError,\n    isLoading: state.questionLoading,\n    step: state.step,\n    currentScore: state.currentScore,\n    highestScore: state.highestScore,\n    roundPoints: state.roundPoints\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchQuestion: (url, currentStep) => dispatch(fetchQuestion(url, currentStep)),\n    resetGame: () => dispatch(resetGame())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GameContainer);\n","import {\n  ADVANCE_STEP,\n  CALCULATE_CURRENT_SCORE,\n  CALCULATE_ROUND_POINTS,\n  RESET_CURRENT_SCORE,\n  RESET_ROUND_POINTS,\n  RESET_STEP,\n  UPDATE_HIGHEST_SCORE\n} from \"../types\";\n\n/**\n * @param { number} currentStep\n * @return Object\n */\nexport const advanceStep = (currentStep) => ({ type: ADVANCE_STEP, currentStep });\nexport const resetStep = () => ({ type: RESET_STEP });\n/**\n * @param { number} step\n * @return Object\n */\nexport const calculateCurrentScore = (step) => ({ type: CALCULATE_CURRENT_SCORE, step });\n/**\n * @param { number} step\n * @return Object\n */\nexport const calculateRoundPoints = (step) => ({ type: CALCULATE_ROUND_POINTS, step });\nexport const resetRoundPoints = () => ({ type: RESET_ROUND_POINTS });\nexport const resetCurrentScore = () => ({ type: RESET_CURRENT_SCORE });\n/**\n * @param { number} score\n * @return Object\n */\nexport const updateHighestScore = (score) => ({ type: UPDATE_HIGHEST_SCORE, score });\n\n/**\n * @type {function} fetchQuestion\n */\nexport const resetGame = () => {\n  return (dispatch) => {\n    dispatch(resetStep());\n    dispatch(resetCurrentScore());\n    dispatch(resetRoundPoints());\n  };\n};","import React, { Component } from 'react';\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"../../redux/store\";\nimport Dashboard from '../../pages/GameContainer/GameContainer';\n\nconst store = configureStore();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <Dashboard/>\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\n\nexport const configureStore = (initialState = {}) => {\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  return createStore(\n    rootReducer,\n    initialState,\n    composeEnhancers(applyMiddleware(thunk))\n  );\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}