{"version":3,"sources":["components/Question/styles.module.css","components/Help/styles.module.css","components/LostGame/styles.module.css","components/WinGame/styles.module.css","pages/GameContainer/styles.module.css","components/Header/styles.module.css","components/Welcome/styles.module.css","components/Btn/styles.module.css","components/Loading/styles.module.css","Utils/utils.js","redux/reducers/rootReducer.js","redux/reducers/questionReducer.js","redux/types.js","redux/reducers/gameReducer.js","components/Header/Header.js","components/Btn/Btn.js","components/Welcome/Welcome.js","components/Question/Question.js","components/LostGame/LostGame.js","components/WinGame/WinGame.js","components/Loading/Loading.js","redux/actions/gameAction.js","redux/actions/questionAction.js","components/Help/Help.js","pages/GameContainer/GameContainer.js","components/App/App.js","redux/store.js","serviceWorker.js","index.js"],"names":["module","exports","question","question-category","question-text","answer","button-container","is-wrong","fadein","help","show","hide","lost","lost-text","win","win-text","game-container","game-screen","header","welcome","grow","button","loading","rotation","calculateScore","base","Math","pow","combineReducers","askedQuestions","state","arguments","length","undefined","action","type","concat","Object","toConsumableArray","questionId","questionLoading","isLoading","questionError","hasErrored","highestScore","score","currentScore","step","roundPoints","userAnswerState","answerState","Header","props","react_default","a","createElement","className","styles","role","aria-label","timeLeft","currentLevel","Btn","onClick","text","Welcome","src","process","alt","components_Btn_Btn","startGame","Question","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","isWrong","onTextUpdate","bind","assertThisInitialized","handleSubmit","event","setState","target","value","preventDefault","correctAnswer","div","document","innerHTML","textContent","innerText","cleanHtmlText","isAnswerCorrect","onSubmit","toLowerCase","category","title","placeholder","onChange","autoFocus","Component","LostGame","restartGame","WinGame","Loading","status","classes","display","join","data-tooltip","helpText","GameContainer","isGameEnded","tick","startTimer","endGame","clearInterval","timer","setInterval","resetGame","prevState","_this2","fetchNextQuestion","fetchQuestion","components_Welcome_Welcome","parseInt","components_WinGame_WinGame","displayHelp","react","components_Question_Question","setUserAnswerState","Help","isPlayingGame","components_Header_Header","components_Loading_Loading","renderScreen","components_LostGame_LostGame","connect","dispatch","url","currentStep","getState","fetch","then","response","ok","Error","statusText","json","questionArr","_getState","id","advanceStep","calculateRoundPoints","questionSuccess","catch","error","console","store","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","thunk","configureStore","App","es","pages_GameContainer_GameContainer","Boolean","location","hostname","match","ReactDOM","render","components_App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cf4cf7c0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"question\":\"styles_question__H8JpO\",\"question-category\":\"styles_question-category__ERckL\",\"question-text\":\"styles_question-text__YnnAp\",\"answer\":\"styles_answer__28LGB\",\"button-container\":\"styles_button-container__3Uxj-\",\"is-wrong\":\"styles_is-wrong__3WA7j\",\"fadein\":\"styles_fadein__3M0ov\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"help\":\"styles_help__1AMBu\",\"show\":\"styles_show__3-1Rz\",\"hide\":\"styles_hide__2M3ky\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lost\":\"styles_lost__y_8dq\",\"lost-text\":\"styles_lost-text__22vQx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"win\":\"styles_win__LUObU\",\"win-text\":\"styles_win-text__yLmZH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"game-container\":\"styles_game-container__1gV1-\",\"game-screen\":\"styles_game-screen__dLCcX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__OoVxy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"welcome\":\"styles_welcome__2O_vC\",\"grow\":\"styles_grow__Qwn4J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button__2z_NC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"styles_loading__2oxd-\",\"rotation\":\"styles_rotation__1Wi3Q\"};","/**\n * @type {string} text\n * @return {string}\n */\nexport const cleanHtmlText = (text) => {\n//disregard security concerns, let's assume the api is safe.\n  const div = document.createElement(\"div\");\n  div.innerHTML = text;\n  return div.textContent || div.innerText || \"\";\n};\n\n/**\n * @type {number} base\n * @return {number}\n */\nexport const calculateScore = (base) => (\n  Math.pow(2, base)\n);","import { combineReducers } from 'redux';\nimport { questionError, questionSuccess, questionLoading, alreadyAskedQuestions } from './questionReducer';\nimport { advanceStep, calculateCurrentScore, updateHighestScore, calculateRoundPoints, userAnswerState } from \"./gameReducer\";\n\nexport default combineReducers({\n  askedQuestions: alreadyAskedQuestions,\n  question: questionSuccess,\n  questionLoading,\n  questionError,\n  highestScore: updateHighestScore,\n  currentScore: calculateCurrentScore,\n  roundPoints: calculateRoundPoints,\n  step: advanceStep,\n  userAnswerState: userAnswerState\n});","import {\n  FETCH_QUESTION_ERROR,\n  FETCH_QUESTION_LOADING,\n  FETCH_QUESTION_SUCCESS,\n  SAVE_ALREADY_ASKED_QUESTIONS\n} from \"../types\";\n\nexport const questionError = (state = false, action) => {\n  switch(action.type) {\n    case FETCH_QUESTION_ERROR:\n      return action.hasErrored;\n    default:\n      return state;\n  }\n};\n\nexport const questionLoading = (state = false, action) => {\n  switch(action.type) {\n    case FETCH_QUESTION_LOADING:\n      return action.isLoading;\n    default:\n      return state;\n  }\n};\n\nexport const questionSuccess = (state = null, action) => {\n  switch(action.type) {\n    case FETCH_QUESTION_SUCCESS:\n      return action.question;\n    default:\n      return state;\n  }\n};\n\nexport const alreadyAskedQuestions = (state = [], action) => {\n  switch(action.type) {\n    case SAVE_ALREADY_ASKED_QUESTIONS:\n      return [...state, action.questionId];\n    default:\n      return state;\n  }\n};","export const FETCH_QUESTION_ERROR = 'FETCH_QUESTION_ERROR';\nexport const FETCH_QUESTION_SUCCESS = 'FETCH_QUESTION_SUCCESS';\nexport const FETCH_QUESTION_LOADING = 'FETCH_QUESTION_LOADING';\nexport const SAVE_ALREADY_ASKED_QUESTIONS = 'SAVE_ALREADY_ASKED_QUESTIONS';\n\nexport const ADVANCE_STEP = 'ADVANCE_STEP';\nexport const RESET_STEP = 'RESET_STEP';\nexport const RESET_CURRENT_SCORE = 'RESET_CURRENT_SCORE';\nexport const RESET_ROUND_POINTS = 'RESET_ROUND_POINTS';\n\nexport const CALCULATE_CURRENT_SCORE = 'CALCULATE_CURRENT_SCORE';\nexport const CALCULATE_ROUND_POINTS = 'CALCULATE_ROUND_POINTS';\nexport const UPDATE_HIGHEST_SCORE = 'UPDATE_HIGHEST_SCORE';\nexport const USER_ANSWER_STATE = 'USER_ANSWER_STATE';\n\n\n\n","import {\n  ADVANCE_STEP, UPDATE_HIGHEST_SCORE,\n  CALCULATE_CURRENT_SCORE, CALCULATE_ROUND_POINTS,\n  RESET_CURRENT_SCORE, RESET_ROUND_POINTS, RESET_STEP, USER_ANSWER_STATE\n} from \"../types\";\nimport { calculateScore } from \"../../Utils/utils\";\n\nexport const advanceStep = (state = 0, action) => {\n  switch(action.type) {\n    case ADVANCE_STEP:\n      return state + 1;\n    case RESET_STEP:\n      return 0;\n    default:\n      return state;\n  }\n};\n\nexport const calculateCurrentScore = (state = 0, action) => {\n  switch(action.type) {\n    case CALCULATE_CURRENT_SCORE:\n      return action.step > 0 ? state + calculateScore(action.step - 1) : 0;\n    case RESET_CURRENT_SCORE:\n      return 0;\n    default:\n      return state;\n  }\n};\n\nexport const calculateRoundPoints = (state = 0, action) => {\n  switch(action.type) {\n    case CALCULATE_ROUND_POINTS:\n      return calculateScore(action.step);\n    case RESET_ROUND_POINTS:\n      return 0;\n    default:\n      return state;\n  }\n};\n\nexport const updateHighestScore = (state = 0, action) => {\n  switch(action.type) {\n    case UPDATE_HIGHEST_SCORE:\n      return action.score;\n    default:\n      return state;\n  }\n};\n\nexport const userAnswerState = (state = true, action) => {\n  switch(action.type) {\n    case USER_ANSWER_STATE:\n      return action.answerState;\n    default:\n      return state;\n  }\n};","import React from \"react\";\nimport styles from \"./styles.module.css\";\n\n/**\n * @type {function({roundPoints: number, timeLeft: number, currentScore: number, highestScore: number, currentLevel: number}): *} props\n * @return HTMLElement\n */\nconst Header = (props) => (\n  <div className={styles['header']}>\n    <div>\n      <span><span role=\"img\" aria-label=\"timer\">⏲</span>️ Time left: </span>\n      <span>{props.timeLeft}</span>\n    </div>\n    <div>\n      <span><span role=\"img\" aria-label=\"joystick\">🕹️</span> Level: </span>\n      <span>{props.currentLevel}</span>\n    </div>\n    <div>\n      <span><span role=\"img\" aria-label=\"joystick\">🎮</span> Current score: </span>\n      <span>{props.currentScore}</span>\n    </div>\n    <div>\n      <span><span role=\"img\" aria-label=\"a hundred\">💯 </span> Highest score: </span>\n      <span>{props.highestScore}</span>\n    </div>\n    <div>\n      <span><span role=\"img\" aria-label=\"dice\">🎲 </span> Round points: </span>\n      <span>{props.roundPoints}</span>\n    </div>\n  </div>\n);\n\nexport default Header;\n\n","import React from \"react\";\nimport styles from \"./styles.module.css\";\n\n/**\n * @types {{action: function, text: string, type: string}} props\n * @return HTMLElement\n */\nconst Btn = (props) => (\n  <button onClick={props.action ? props.action : null} type={props.type ? props.type : \"button\"}\n          className={styles['button']}>{props.text}</button>\n);\n\nexport default Btn;","import React from \"react\";\nimport styles from \"./styles.module.css\";\nimport Btn from \"../Btn/Btn\";\n\n/**\n * @param {{startGame: function}} props\n * @return HTMLElement\n */\nconst Welcome = (props) => (\n  <div className={styles['welcome']}>\n    <img src={`${process.env.PUBLIC_URL}/images/logo.png`} alt=\"logo\"/>\n    <Btn action={props.startGame} text=\"Start\"/>\n  </div>\n);\n\nexport default Welcome;","import React, { Component } from \"react\";\nimport Btn from \"../Btn/Btn\";\nimport { cleanHtmlText } from \"../../Utils/utils\";\nimport styles from \"./styles.module.css\";\n\n/**\n * @param {{question: Object, onSubmit: function, userAnswerState: function}} props\n * @return HTMLElement\n */\nclass Question extends Component {\n  constructor() {\n    super();\n    this.state = {\n      answer: '',\n      isWrong: false\n    };\n\n    this.onTextUpdate = this.onTextUpdate.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  onTextUpdate(event) {\n    this.setState({\n      answer: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    if (this.state.answer) {\n      //Sometimes the answer come wrapped in HTML.\n      const correctAnswer = cleanHtmlText(this.props.question.answer);\n      if (this.isAnswerCorrect(correctAnswer, this.state.answer)) {\n        this.setState({\n          isWrong: false\n        });\n        this.props.onSubmit(this.props.question.answer, this.state.answer)\n      } else {\n        this.setState({\n          isWrong: true\n        });\n        this.props.userAnswerState(false);\n      }\n    }\n  };\n\n  /**\n   * @type {string} correctAnswer\n   * @type {string} answer\n   * @return HTMLElement\n   */\n  isAnswerCorrect(correctAnswer, answer) {\n    return correctAnswer.toLowerCase() === answer.toLowerCase();\n  }\n\n  render() {\n    return this.props.question ? (\n      <form onSubmit={this.handleSubmit}>\n        <div className={styles['question']}>\n          <div className={styles['question-category']}>\n            {this.props.question ? this.props.question.category.title : ''}\n          </div>\n          <div className={styles['question-text']}>\n            {this.props.question.question}\n          </div>\n        </div>\n        <input placeholder=\"Your answer\" className={styles['answer']} type=\"text\" onChange={this.onTextUpdate}\n               autoFocus/>\n        <div className={styles['button-container']}>\n          {this.state.isWrong ? <div className={styles['is-wrong']}>\n            <span role=\"img\" aria-label=\"thumbs-down\">👎</span>\n            Wrong answer\n            <span role=\"img\" aria-label=\"thumbs-down\"> 👎</span>\n          </div> : null}\n          <Btn type=\"submit\" text=\"Submit\"/>\n        </div>\n      </form>\n    ) : null\n  }\n}\n\nexport default Question;","import React from \"react\";\nimport Btn from \"../Btn/Btn\";\nimport styles from \"./styles.module.css\";\n\n/**\n * @param {{restartGame: function, score: number}} props\n * @return HTMLElement\n */\nconst LostGame = (props) => (\n  <div className={styles['lost']}>\n    <div className={styles['lost-text']}>\n      <span role=\"img\" aria-label=\"cross-emoji\">❌</span>\n      <span>Game over </span>\n      <span role=\"img\" aria-label=\"cross-emoji\"> ❌</span>\n      <br/>\n      <div>Your score: {props.score}</div>\n    </div>\n    <Btn action={props.restartGame} text=\"Restart\"/>\n  </div>\n);\n\nexport default LostGame;","import React from \"react\";\nimport Btn from \"../Btn/Btn\";\nimport styles from \"./styles.module.css\";\n\n/**\n * @param {{restartGame: function, score: number}} props\n * @return HTMLElement\n */\nconst WinGame = (props) => (\n  <div className={styles['win']}>\n    <div className={styles['win-text']}>\n      <span role=\"img\" aria-label=\"party-emoji\">🎉🎉  🏆  🎉🎉</span>\n      <div>Congratulations, you Win!</div>\n      <span role=\"img\" aria-label=\"party-emoji\">🎉🎉  🏆  🎉🎉</span>\n      <br/>\n      <div>Your score: {props.score}</div>\n    </div>\n    <Btn action={props.restartGame} text=\"Play again\"/>\n\n  </div>\n);\n\nexport default WinGame;","import React from \"react\";\nimport styles from \"./styles.module.css\";\n\n/**\n * @return HTMLElement\n */\nconst Loading = () => (\n  <div className={styles['loading']}>\n    <img src={`${process.env.PUBLIC_URL }/images/loading.svg`} alt=\"loading\"/>\n  </div>\n);\n\nexport default Loading;","import {\n  ADVANCE_STEP,\n  CALCULATE_CURRENT_SCORE,\n  CALCULATE_ROUND_POINTS,\n  RESET_CURRENT_SCORE,\n  RESET_ROUND_POINTS,\n  RESET_STEP,\n  UPDATE_HIGHEST_SCORE,\n  USER_ANSWER_STATE\n} from \"../types\";\n\n/**\n * @param {number} currentStep\n * @return Object\n */\nexport const advanceStep = (currentStep) => ({ type: ADVANCE_STEP, currentStep });\nexport const resetStep = () => ({ type: RESET_STEP });\n/**\n * @param {number} step\n * @return Object\n */\nexport const calculateCurrentScore = (step) => ({ type: CALCULATE_CURRENT_SCORE, step });\n/**\n * @param {number} step\n * @return Object\n */\nexport const calculateRoundPoints = (step) => ({ type: CALCULATE_ROUND_POINTS, step });\nexport const resetRoundPoints = () => ({ type: RESET_ROUND_POINTS });\nexport const resetCurrentScore = () => ({ type: RESET_CURRENT_SCORE });\n/**\n * @param {number} score\n * @return Object\n */\nexport const updateHighestScore = (score) => ({ type: UPDATE_HIGHEST_SCORE, score });\n/**\n * @param {boolean} answerState\n * @return Object\n */\nexport const userAnswerState = (answerState) => ({ type: USER_ANSWER_STATE, answerState });\n\n/**\n * @type {function} fetchQuestion\n */\nexport const resetGame = () => {\n  return (dispatch) => {\n    dispatch(resetStep());\n    dispatch(resetCurrentScore());\n    dispatch(resetRoundPoints());\n    dispatch(userAnswerState(true));\n  };\n};","import {\n  FETCH_QUESTION_ERROR,\n  FETCH_QUESTION_LOADING,\n  FETCH_QUESTION_SUCCESS,\n  SAVE_ALREADY_ASKED_QUESTIONS\n} from \"../types\";\nimport { calculateCurrentScore, advanceStep, calculateRoundPoints, updateHighestScore } from \"./gameAction\";\n\nexport const questionError = (status) => ({ type: FETCH_QUESTION_ERROR, hasErrored: status });\nexport const questionLoading = (status) => ({ type: FETCH_QUESTION_LOADING, isLoading: status });\nexport const questionSuccess = (question) => ({ type: FETCH_QUESTION_SUCCESS, question });\nexport const alreadyAskedQuestions = (questionId) => ({ type: SAVE_ALREADY_ASKED_QUESTIONS, questionId });\n\n/**\n * @type {function} fetchQuestion\n */\nexport const fetchQuestion = (url, currentStep) => {\n  return (dispatch, getState) => {\n    dispatch(questionLoading(true));\n    fetch(url)\n      .then((response) => {\n        if (!response.ok) {\n          throw Error(response.statusText);\n        }\n        dispatch(questionLoading(false));\n        return response;\n      })\n      .then((response) => response.json())\n      .then((questionArr) => {\n        const { askedQuestions, highestScore, currentScore, roundPoints } = getState();\n        const question = questionArr[0];\n\n        //Validate if the current id was already asked\n        if (askedQuestions[question.id]) {\n          fetchQuestion(url, currentStep);\n        } else {\n          if (currentScore >= highestScore) {\n            dispatch(updateHighestScore(currentScore + roundPoints));\n          }\n          dispatch(alreadyAskedQuestions(question.id));\n          dispatch(advanceStep(currentStep));\n          dispatch(calculateCurrentScore(currentStep));\n          dispatch(calculateRoundPoints(currentStep));\n          dispatch(questionSuccess(question));\n        }\n      })\n      .catch((error) => {\n        dispatch(questionError(true));\n        console.error(error);\n      });\n  };\n};","import React from \"react\";\nimport styles from \"./styles.module.css\";\n\n/**\n * @types {{helpText: string, display: boolean}} props\n * @return HTMLElement\n */\nconst Btn = (props) => {\n  const classes = [styles['help'], props.display ? styles['show'] : styles['hide']].join(' ');\n  return (\n    <span className={classes} role=\"img\"\n          aria-label=\"question-mark\" data-tooltip={props.helpText}>❓\n  </span>\n  );\n};\n\nexport default Btn;\n","import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport Header from '../../components/Header/Header';\nimport Welcome from \"../../components/Welcome/Welcome\";\nimport Question from \"../../components/Question/Question\";\nimport LostGame from \"../../components/LostGame/LostGame\";\nimport WinGame from \"../../components/WinGame/WinGame\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { fetchQuestion } from \"../../redux/actions/questionAction\";\nimport { resetGame, userAnswerState } from \"../../redux/actions/gameAction\";\nimport styles from \"./styles.module.css\";\nimport Help from \"../../components/Help/Help\";\n\n/**\n * @type {{timer: number, step: number, onSubmit: function}} props\n * @return HTMLElement\n */\nclass GameContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timeLeft: process.env.REACT_APP_TIME_AVAILABLE,\n      isGameEnded: false\n    };\n\n    this.tick = this.tick.bind(this);\n    this.startTimer = this.startTimer.bind(this);\n    this.endGame = this.endGame.bind(this);\n    this.restartGame = this.restartGame.bind(this);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  startTimer() {\n    clearInterval(this.timer);\n    this.setState({ timeLeft: process.env.REACT_APP_TIME_AVAILABLE, isGameEnded: false });\n    this.timer = setInterval(this.tick, 1000);\n  }\n\n  endGame() {\n    clearInterval(this.timer);\n    this.setState({\n      timeLeft: process.env.REACT_APP_TIME_AVAILABLE,\n      isGameEnded: true\n    });\n  }\n\n  restartGame() {\n    clearInterval(this.timer);\n    this.props.resetGame();\n    this.setState({\n      timeLeft: process.env.REACT_APP_TIME_AVAILABLE,\n      isGameEnded: false\n    });\n  }\n\n  tick() {\n    if (this.state.timeLeft > 0 && !this.props.hasErrored) {\n      this.setState(prevState => ({\n        timeLeft: prevState.timeLeft - 1\n      }));\n    } else if (this.props.hasErrored) {\n      clearInterval(this.timer);\n    } else {\n      this.endGame();\n    }\n  }\n\n  renderScreen(props) {\n    const fetchNextQuestion = () => {\n      if (!props.userAnswerState) {\n        this.endGame();\n      } else {\n        props.fetchQuestion(`${process.env.REACT_APP_API_URL}api/random`, props.step);\n        this.startTimer();\n      }\n    };\n\n    const updateUserAnswerState = (state) => {\n      props.setUserAnswerState(state)\n    };\n\n    switch(props.step) {\n      case 0:\n        return <Welcome startGame={fetchNextQuestion}/>;\n      case (parseInt(process.env.REACT_APP_AMOUNT_OF_LEVELS) + 1):\n        clearInterval(this.timer);\n        return <WinGame score={this.props.currentScore} restartGame={this.restartGame}/>;\n      default:\n        const displayHelp = this.state.timeLeft < 15;\n        return (<Fragment>\n          <Question question={props.question}\n                    onSubmit={fetchNextQuestion}\n                    userAnswerState={updateUserAnswerState}/>\n          <Help display={displayHelp} helpText={props.question !== null ? props.question.answer : ''}/>\n        </Fragment>);\n    }\n  }\n\n  render() {\n    const isPlayingGame = !this.props.hasErrored && !this.props.isLoading && !this.state.isGameEnded;\n    return (\n      <div className={styles['game-container']}>\n        <Header timeLeft={this.state.timeLeft} currentScore={this.props.currentScore}\n                highestScore={this.props.highestScore} roundPoints={this.props.roundPoints}\n                currentLevel={this.props.step}/>\n        <div className={styles['game-screen']}>\n          {this.props.hasErrored ? <div>ERROR</div> : null}\n          {this.props.isLoading ? <Loading/> : null}\n          {isPlayingGame ? this.renderScreen(this.props) : null}\n          {this.state.isGameEnded ? <LostGame score={this.props.currentScore} restartGame={this.restartGame}/> : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    question: state.question,\n    hasErrored: state.questionError,\n    isLoading: state.questionLoading,\n    step: state.step,\n    currentScore: state.currentScore,\n    highestScore: state.highestScore,\n    roundPoints: state.roundPoints,\n    userAnswerState: state.userAnswerState\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchQuestion: (url, currentStep) => dispatch(fetchQuestion(url, currentStep)),\n    resetGame: () => dispatch(resetGame()),\n    setUserAnswerState: (state) => dispatch(userAnswerState(state))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GameContainer);\n","import React, { Component } from 'react';\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"../../redux/store\";\nimport Dashboard from '../../pages/GameContainer/GameContainer';\n\nconst store = configureStore();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Dashboard/>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\n\nexport const configureStore = (initialState = {}) => {\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  return createStore(\n    rootReducer,\n    initialState,\n    composeEnhancers(applyMiddleware(thunk))\n  );\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}